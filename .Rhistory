x1 <- 1:3
c( 1:3, 1:2 )
summary( 1:5 )
summary( c(1:5, 1:2) )
x1 <- 1:5
x2 <- c( 1:5, 1:3, 1:2 )
quantile( x1 )
quantile( x2 )
summary( x2 )
q1 <- summary(x2)
class( q1 )
names(q1)
quantile( x2, probs=0.25 )
c1 <- c("x","y","z")
c2 <- c("x","a","y","a","x")
match( c1, c2 )
c1[match(c1, c2)]
rep( 1:3, 4 )
rep("dd",3)
c1 <- rep( 1:3, 4 )
c1 <- c( c1, rep( 1:2, 3))
c1
df1 <- data.frame( num=c1 )
df1
mr <- ddply( df1, .(num), rnum )
library( plyr )
mr <- ddply( df1, .(num), rnum )
mr <- ddply( df1, .(num), nrow )
class(mr)
mr
dir.test <- "C:/Hammer/DataAnalysis/ML4H/data/TestText"
dir.files <- dir( dir.test )
dir.files
regexpr("\\.bak",dir.files)
0 > regexpr(".bak$", dir.files)
dir.files <- dir.files[0>regexpr("\\.bak$",dir.files)]
dir.files
get.msg <- function(path) {
con <- file(path, open="rt", encoding="utf-8" )
text <- readLines(con)
msg <- text[seq( which(text="")[1]+1, length(text), 1 )]
close(con)
return( paste(msg,collapse="\n") )
}
dir.files
dir.path
dir.path <- dir.text
dir.path <- dir.test
dir.path
dir.files <- paste( dir.path, dir.files, sep="/")
dir.files
all.spam <- sapply( dir.files, get.msg )
get.msg <- function(path) {
con <- file(path, open="rt", encoding="utf-8" )
text <- readLines(con)
msg <- text[seq( which(text=="")[1]+1, length(text), 1 )]
close(con)
return( paste(msg,collapse="\n") )
}
all.spam <- sapply( dir.files, get.msg )
all.spam
names(all.spam)
names(all.spam)
class(all.spam)
length(all.spam)
VectorSource( all.spam )
library( tm )
library( ggplot2 )
VectorSource( all.spam )
?VectorSource
vs <- VectorSource( all.spam )
clas(vs)
class(vs)
Corpus(vs)
corp <- Corpus(vs)
corp
class(corp)
control <- list(stopwords=T,removePunctuation=T,removeNumber=T,minDocFreq=2)
control
doc.dtm <- TermDocumentMatrix(doc.corpus,control)
doc.dtm <- TermDocumetMatrix( corp, control )
doc.dtm <- TermDocumentMatrix( corp, control )
doc.dtm
get.tdm <- function( doc.vec ){
doc.corpus <- Corpus(VectorSource(doc.vec))
control <- list( stopwords=T, removePunction=T, removeNumbers=T, minDocFreq=2)
doc.dtm <- TermDocumentMatrix( doc.corpus, control )
return( doc.dtm )
}
dir.files
spam.tdm <- get.tdm(dir.files)
spam.tdm
all.spam
spam.tdm <- get.tdm( all.spam )
spam.tdm
spam.matrix <- as.matrix(spam.tdm)
spam.matrix
names( spam.matrix )
head( spam.matrix )
head( spam.matrix[1,] )
head( spam.matrix[,1] )
nrow(spam.matrix)
ncol( spam.matrix )
rnames( spam.matrix )
rownames( spam.matrix )
spam.counts <- rowSums(spam.matrix)
spam.counts
x1 <- 1:10
y1 <- x1*x1 + 2*x1
x1 <- x1*x1 - x1
x1 <- 1:10
y1 <- x1*x1 - x1
?apply
x1^2
(x1-2)^2
y1 <- (x1-3)^2+1
x1 <- 1:10
y1 <- (x1-3)^2 + 2
df1 <- data.frame( x1=x1, y1=y1 )
df1
plot( df1$y1~df$x1 )
df1$x1
df1$x1Nam <- as.character(df1$x1Nam)
df1$x1Nam <- as.character(df1$x1Nam)
df1$x1Nam <- as.character(df1$x1)
df1
plot( df1$y1~df1$x1Nam )
plot( df1$y1~df1$x1Nam, type="1" )
plot( df1$y1~df1$x1Nam )
plot( df1$y1~df$x1Nam )
plot( df1$y1~df$x1Nam )
plot( df1$y1~df$x1Nam )
df1$x1Nam
plot( df1$y1~df1$x1Nam )
plot( df1$y1~df1$x1Nam, type="1" )
?plot
plot( df1$y1~df1$x1Nam, type="l" )
y1 <- (x1-3)^2 + -x1 + 2
y1 <- (x1-3)^2 + -x1 + 10
plot( df1$y1~df1$x1Nam, type="l" )
plot( df1$y1~df1$x1Nam )
y1
y1 <- (x1-3)^2 + -x1
plot( df1$y1~df1$x1Nam, type="l" )
df1 <- data.frame( x1=x1, y1=y1 )
plot( df1$y1~df1$x1Nam, type="l" )
y1 <- (x1-3)^2 - x1
y1 <- (x1-3)^2 - x1 + 3
y1
x1 <- 1:10
y1 <- (x1-3)^2 - x1 + 3
y1 <- c(6,  2,  0,  0,  2,  6, 12, 20, 12, 6)
df1 <- data.frame( x1=x1, y1=y1 )
plot( df1$y1~df1$x1Nam )
df1$x1Nam <- as.character( df1$x1 )
plot( df1$y1~df1$x1Nam )
plot( df1$y1~df1$x1Nam, type="l" )
?plot
x1 <- 1:10
y1 <- (x1-3)^2 - x1 + 3
y1 <- c(6,  2,  0,  0,  2,  6, 12, 20, 12, 6)
y2 <- 2*y1-7
df1 <- data.frame( x1=x1, y1=y1, y2=y2 )
df1$x1Nam <- as.character( df1$x1 )
plot( df1$y1~df1$x1Nam )
plot( df1$y1~df1$x1Nam, type="l" )
plot( df1$y1~df1$x1Nam, type="l", col="blue" )
lines( df1$y2~df1$x1Nam, type="l", col="red" )
plot( df1$y2~df1$x1Nam, type="l", col="blue" )
lines( df1$y1~df1$x1Nam, type="l", col="red" )
1:10
y1 <- c(  1,  2,  3,  4,  5,  6,  7,  8,  9, 10 )
y2 <- c(  1,  4,  5,  5,  5,  5,  5,  5,  6, 10 )
y3 <- c(  1,  1,  1,  2,  5,  8,  9, 10, 10, 10 )
y4 <- c(  1,  2,  2,  3,  3,  3,  4,  4,  5, 10 )
df1 <- data.frame( y1=y1, y2=y2, y3=y3, y4=y4 )
boxplot( df1 )
summary( y4 )
pairs( df1 )
par( mfrow=c(2,3) )
plot( df1$y1~df1$x1Nam, type="l", col="blue" )
plot( df1$y2~df1$x1Nam, type="l", col="red" )
x1 <- 1:10
y1 <- c(6,  2,  0,  0,  2,  6, 12, 20, 12, 6)
y2 <- 2*y1-7
x1 <- 1:10
y1 <- c(6,  2,  0,  0,  2,  6, 12, 20, 12, 6)
y2 <- 2*y1-7
df1 <- data.frame( x1=x1, y1=y1, y2=y2 )
df1$x1Nam <- as.character( df1$x1 )
par( mfrow=c(2,3) )
plot( df1$y1~df1$x1Nam, type="l", col="blue" )
plot( df1$y2~df1$x1Nam, type="l", col="red" )
boxplot( df1 )
y1 <- c(  1,  2,  3,  4,  5,  6,  7,  8,  9, 10 )
y2 <- c(  1,  4,  5,  5,  5,  5,  5,  5,  6, 10 )
y3 <- c(  1,  1,  1,  2,  5,  8,  9, 10, 10, 10 )
y4 <- c(  1,  2,  2,  3,  3,  3,  4,  4,  5, 10 )
df2 <- data.frame( y1=y1, y2=y2, y3=y3, y4=y4 )
boxplot( df2 )
x1 <- 1:10
y1 <- c(6,  2,  0,  0,  2,  6, 12, 20, 12, 6)
y2 <- 2*y1-7
df1 <- data.frame( x1=x1, y1=y1, y2=y2 )
df1$x1Nam <- as.character( df1$x1 )
y1 <- c(  1,  2,  3,  4,  5,  6,  7,  8,  9, 10 )
y2 <- c(  1,  4,  5,  5,  5,  5,  5,  5,  6, 10 )
df2 <- data.frame( y1=y1, y2=y2 )
par( mfrow=c(2,3) )
plot( df1$y1~df1$x1Nam, type="l", col="blue" )
plot( df1$y2~df1$x1Nam, type="l", col="red" )
boxplot( df2 )
x1 <- 1:5
x2 <- x1*2
m1 <- cbind( x1, x2 )
m1
data.frame( m1 )
d1 <- data.frame( m1 )
d1
d1$x1
?cbind
x1 <- 1:10
x1
m1 <- cbind( x1, x2 )
m1
x = rnorm(50)
x
y = x + norm(50, mean(50), sd=.1 )
y = norm(50, mean(50), sd=.1 )
y = norm(50, mean(50), sd=0.1 )
y = x + rnorm(50, mean(50), sd=.1 )
cor(x,y)
mean(x)
mean( rnorm(50,mean(50),sd=.1))
mean(50)
rnorm( 50, mean=50, sd=0.1 )
y = rnorm(100)
mean(y)
mean( rnorm(100) )
mean( rnorm(100) )
mean( rnorm(100) )
mean( rnorm(100) )
mean( rnorm(100) )
mean( rnorm(100) )
mean( rnorm(100) )
mean( rnorm(100) )
set.seed(3)
mean( rnorm(100) )
mean( rnorm(100) )
mean( rnorm(100) )
mean( rnorm(100) )
mean( rnorm(100) )
y
var(y)
sqrt( var(y) )
x <- rnorm(100)
y <- rnorm(100)
plot(x,y)
ls()
rm( list=ls() )
ls()
x<-rnorm(100); y<-rnorm(100)
plot( x, y, xlab="x-axis", ylab="y-axis", main="Plot of X vs Y")
pdf("test.pdf")
plot( x, y, xlab="x-axis", ylab="y-axis", main="Plot of X vs Y")
dev.off()
dev.off()
setwd("c:/zproject/ISLR")
getwd()
x
Auto = read.table("./DataSet/Auto.data")
Auto
fix(Auto)
dim(Auto)
Auto
read.table("./DataSet/Auto.data", header=T)
Auto = read.table("./DataSet/Auto.data", header=T)
dim(Auto)
Auto
Auto = read.table("./DataSet/Auto.data", header=T, na.strings="?")
Auto[1:3,]
Auto[1:9,]
dim(Auto)
Auto = na.omit(Auto)
dim(Auto)
names( Auto )
write.table( Auto, "dd.txt" )
plot( Auto$cylinders, Auto$mpg )
with( Auto, plot( cylinders, mpg ) )
Auto[1:10, ]
attach(Auto)
cylinders = as.factor(cylinders)
plot( cylinders, mpg )
plot( cylinders, mpg, color="red", varwidth=T )
plot( cylinders, mpg )
plot( cylinders, mpg, varwidth=T, horizontal=T )
hist( mpg )
hist( mpg, breaks=15 )
pairs( Auto )
pairs( ~ mpg + displacement + horsepower, Auto )
pairs( ~ mpg, displacement, horsepower, Auto )
pairs( ~ mpg + displacement + horsepower, Auto )
plot( horsepower, mpg )
identify( horsepower, mpg, name )
plot( horsepower, mpg, col=3 )
identify( horsepower, mpg, name )
summary( Auto )
q()
